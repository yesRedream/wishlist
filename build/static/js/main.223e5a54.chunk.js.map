{"version":3,"sources":["firebase.js","api.js","Components/Header/index.jsx","Components/Sidebar/index.jsx","context/db.js","Components/WishCreate/index.jsx","Components/ListItem/index.jsx","Components/ListItemEdit/index.jsx","Components/Itemslist/index.jsx","Components/Content/index.jsx","Components/Login/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","signInWithGoogle","google","GoogleAuthProvider","signInWithRedirect","then","res","console","log","user","catch","error","message","get","collectionName","collection","query","snapshot","docs","map","doc","id","data","getCategories","getWishes","getCategoryWishes","listId","where","createWish","owner","currentUser","uid","add","docRef","deleteWish","wishId","delete","updateWishName","update","updateWishPrice","updateWishLink","Header","match","history","useHistory","className","email","src","photoURL","alt","onClick","signOut","push","window","location","reload","Sidebar","useState","categories","setCategories","title","setTitle","handleClick","category","categoryId","useEffect","onSnapshot","items","type","name","to","htmlFor","key","onSubmit","event","preventDefault","createCategory","placeholder","value","required","onChange","e","stopPropagation","target","createContext","wishes","WishCreate","price","setPrice","link","setLink","toggleClass","setToggleClass","imgUrl","setImgUrl","imgUrlPlace","setImgUrlPlace","picture","setPicture","active","setActive","ref","wrapperRef","useRef","a","URL","createObjectURL","files","file","storageRef","storage","fileRef","child","put","getDownloadURL","handleEnter","keyCode","form","index","Array","prototype","indexOf","call","elements","focus","handleClickOutside","current","contains","document","addEventListener","removeEventListener","accept","onKeyDown","step","min","ListItem","wish","onDelete","onSelect","rel","href","startsWith","ListItemEdit","onUpdate","Itemslist","selectedWish","setSelectedWish","setWishes","db2","useContext","DBContext","handleDelete","filter","w","handleSelect","params","undefined","find","Content","props","Login","App","isAuth","setAuth","api","onAuthStateChanged","Provider","exact","path","component","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.223e5a54.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n\n// Initialize Cloud Firestore through Firebase\nconst app = firebase.initializeApp({\n    apiKey: \"AIzaSyCcwUUV0AAtlv0xtrx5-yer9pY6oFbp6TI\",\n    authDomain: \"wishlist-d768c.firebaseapp.com\",\n    databaseURL: \"https://wishlist-d768c.firebaseio.com\",\n    projectId: \"wishlist-d768c\",\n    storageBucket: \"wishlist-d768c.appspot.com\",\n    messagingSenderId: \"942671943039\",\n    appId: \"1:942671943039:web:9b6d91fbb48e1bc976364a\"\n});\n\nconst db = firebase.firestore();\nconst auth = firebase.auth;\n// const google = new firebase.auth.GoogleAuthProvider();\n\nexport { app, db, auth};","import { db, auth } from './firebase';\n\nexport function signInWithGoogle() {\n    const google = new auth.GoogleAuthProvider(); \n    return auth().signInWithRedirect(google).then((res) => {\n        console.log(res.user);\n      }).catch((error) => {\n        console.log(error.message);\n      });\n}\n\n\nexport function get(collectionName) {\n    const collection = db.collection(collectionName);\n    return (query = () => collection) => {\n        return query(collection)\n            .get()\n            .then(snapshot => {\n                const items = snapshot.docs.map(doc => ({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n\n                return items;\n            })\n            .catch(error => {\n                console.log(\"Error getting documents: \", error);\n            });\n    }\n\n}\n\nexport function getCategories() {\n    return db.collection('categories')\n        .get()\n        .then(snapshot => {\n            const items = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            \n            return items;\n        });        \n}\n\nexport function getWishes() {\n    return db.collection('wishes')\n        // .where('categoryId', '==', '')\n        .get()\n\n        .then(snapshot => {\n            const items = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            return items;\n        });\n}\n\n// export function getWishes() {\n//     return db.collection('wishes')\n//         // .where('categoryId', '==', '')\n//         .onSnapshot(snapshot => {\n//             const items = snapshot.docs.map(doc => ({\n//                 id: doc.id,\n//                 ...doc.data()\n//             }));\n//             console.log(items);\n//             return items;\n//           });\n// }\n\nexport function getCategoryWishes(listId) {\n    return db.collection('wishes')\n        .where('categoryId', 'array-contains', listId)\n        .get()\n        .then(snapshot => {\n            const items = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            \n            return items;\n        });          \n}\n\nexport function createWish(data) {\n    const owner = auth().currentUser ? auth().currentUser.uid : 'unknown';\n    return db.collection('wishes').add({\n        ...data, owner\n        // completed: false\n    })\n        .then(docRef => docRef.get())\n        .then(doc => ({\n            id: doc.id,\n            ...doc.data()\n        }));\n}\n\nexport function deleteWish(wishId) {\n    return db.collection('wishes').doc(wishId).delete()\n        .then(() => wishId);\n}\n\n// export function updateWish(wishId, data) {\n//     //   console.log(wishId, data);\n//     return db.collection('wishes').doc(wishId).update(data)\n//     .then(() => ({\n//         id: wishId,\n//         ...data\n//     }));\n// }\n\n// export function updateWish(wishId, title, price, link) {\n//     //   console.log(wishId, data);\n//     return (\n//         db.collection('wishes').doc(wishId).update({'title': title});\n//         db.collection('wishes').doc(wishId).update({'price': price});\n//         db.collection('wishes').doc(wishId).update({'link': link});\n//     );\n// }\n\nexport function updateWishName(wishId, data) {\n    //   console.log(wishId, data);\n    return db.collection('wishes').doc(wishId).update({'title': data});\n}\n\nexport function updateWishPrice(wishId, data) {\n    //   console.log(wishId, data);\n    return db.collection('wishes').doc(wishId).update({'price': data});\n}\n\nexport function updateWishLink(wishId, data) {\n    //   console.log(wishId, data);\n    return db.collection('wishes').doc(wishId).update({'link': data});\n}","import React from 'react';\nimport { auth } from '../../firebase';\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function Header({match}) {\n//    const category = useContext(categoryContext);\n \n    const history = useHistory();\n    function handleClick(){\n        auth().signOut().then(function() {\n            history.push(\"/\");\n            window.location.reload();\n\n          }).catch(function(error) {\n            // An error happened.\n          });\n    }\n    \n    return (\n        <header className=\"header\">\n            <h1>Wish List</h1>\n            <div className=\"profile-wrap\">\n                <div className=\"email-img-wrap\">\n                    <p className=\"email-text\">{auth().currentUser.email}</p>\n                    <img className=\"profile-img\" src={auth().currentUser.photoURL} alt=\"profile\"/>\n                </div>\n\n                <div className=\"profile-dropdown\">\n                    <p onClick={handleClick}>Logout</p>\n                </div>\n            </div>\n        </header>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom'; \nimport { db, auth } from '../../firebase';\n\n\nexport default function Sidebar() {\n  const [categories , setCategories] = useState([]);\n  const [title , setTitle] = useState('');\n\n\n  function getCategoriesSubscribe() {\n    return db.collection('categories')\n      .where('owner', '==', auth().currentUser.uid)\n      .onSnapshot(snapshot => {\n        const items = snapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n        }));\n        setCategories(items);\n      });\n  }\n\n  useEffect(() => {\n    getCategoriesSubscribe();\n  // }, [db2, match.params.categoryId]);\n  }, []);\n\n\n  function createCategory(title) {\n    const owner = auth().currentUser ? auth().currentUser.uid : 'unknown';\n    return db.collection('categories').add({\n        title, owner\n    });\n        // .then(docRef => docRef.get())\n        // .then(doc => ({\n        //     id: doc.id,\n        //     title: title\n        //     // ...doc.data()\n        // }));\n}\n\n  function updateCategory(categoryId, data) {\n    //   console.log(wishId, data);\n    return db.collection('categories').doc(categoryId).update({'title': data});\n  }\n\n   function deleteCategory(categoryId) {\n    return db.collection('categories').doc(categoryId).delete()\n        .then(() => categoryId);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (title) {\n      createCategory(title);\n      setTitle('');\n    }\n  }\n\n  function handleClick(category){\n    // event.stopPropagation();\n    deleteCategory(category);\n  }\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"categories-list\">\n        {/* <h2>Category</h2> */}\n        <div className=\"category\">\n            <input type=\"radio\" id=\"all\" name=\"category\"></input>\n            <NavLink className=\"navlink\" to=\"/all\">\n              <label className=\"category-label\" htmlFor=\"all\">\n                All\n              </label>\n            </NavLink>\n         </div>\n         {categories.map(category =>\n         <div className=\"category\" key={category.id}>\n           <input type=\"radio\" id={category.id} name=\"category\"></input>\n           <NavLink className=\"navlink\" to={category.id}>\n              <label className=\"category-label\" htmlFor={category.id}>\n                {category.title}\n                <button className=\"delete\" onClick={() => handleClick(category.id)}>{'\\u2715'}</button>\n              </label>\n            </NavLink>\n         </div>\n         )}\n         {/* <div className=\"category\">\n            <input type=\"radio\" id=\"all\" name=\"category\"></input>\n            <NavLink className=\"navlink\" to=\"/Bought\">\n              <label className=\"category-label\" htmlFor=\"all\">\n                Already bought\n              </label>\n            </NavLink>\n         </div> */}\n         <div className=\"add-category\">\n           <form onSubmit={handleSubmit}>\n            <input type=\"text\" \n                   placeholder=\"Add Category\"\n                   value={title}\n                   required\n                   onChange={e => {\n                     e.stopPropagation();\n                     setTitle(e.target.value);\n            }}/>\n\n            <input type=\"submit\" \n                   value={'\\u002B'} \n                   className=\"submit\"/>\n           </form>\n         </div>\n      </div>\n    </div>\n  );\n}\n\n","import { createContext } from 'react';\n\nexport default createContext({ categories: [], wishes: [], user: null});","import React, { useState, useEffect, useRef } from 'react';\n// import DBContext from '../../context/db';\nimport { app } from '../../firebase';\n\n\nexport default function WishCreate({ onSubmit }) {\n  const [title, setTitle] = useState('');\n  const [price, setPrice] = useState('');\n  const [link, setLink] = useState('');\n  // const db = useContext(DBContext);\n  const [toggleClass, setToggleClass] = useState(false);\n  const [imgUrl, setImgUrl] = useState(null);\n  const [imgUrlPlace, setImgUrlPlace] = useState('');\n  const [picture, setPicture] = useState('');\n  const [active, setActive] = useState(false);\n \n\n  function handleClick() {\n    setToggleClass(true);\n  }\n\n  function useOutsideAlerter(ref) {\n    useEffect(() => {\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          setToggleClass(false);\n        }\n      }\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  }\n\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n\n  async function onFileChange (event) {\n\n    if (event.target.value) {\n      setActive(true);\n      setPicture(URL.createObjectURL(event.target.files[0]) );\n      setImgUrlPlace(event.target.value);\n      const file = event.target.files[0];\n      const storageRef = app.storage().ref();\n      const fileRef = storageRef.child(file.name);\n      await fileRef.put(file);\n      setImgUrl(await fileRef.getDownloadURL());\n    }\n  }\n\n  function handleDeleteImg() {\n    setActive(false);\n    setImgUrlPlace('');\n    setImgUrl(null);\n  }\n\n  function handleEnter(event) {\n    if (event.keyCode === 13) {\n      const form = event.target.form;\n      const index = Array.prototype.indexOf.call(form, event.target);\n      form.elements[index + 1].focus();\n      event.preventDefault();\n    }\n  }\n  \n\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(price);\n    if (title) {\n      onSubmit(title, price, link, imgUrl);\n      setTitle('');\n      setPrice('');\n      setLink('');\n      setImgUrl(null);\n      setImgUrlPlace('');\n      setToggleClass(false);\n      setActive(false);\n\n    }\n  }\n\n  return (\n    <div className=\"add-wish-wrap\">\n      <form ref={wrapperRef} onSubmit={handleSubmit}  onClick={handleClick} className={`add-wish-form ${toggleClass ? 'active' :''}`}>\n        <div className=\"form-wrap\">\n          <div className=\"img-add-wrap\">\n            <input type=\"file\" \n                  accept=\"image/x-png,image/gif,image/jpeg\"\n                  onChange={onFileChange}\n                  value={imgUrlPlace}\n                  id=\"imageInput\"/>\n            <label htmlFor=\"imageInput\" \n                   className={`img-button ${active ? 'active' :''}`}\n                   >Choose image</label>\n            <div className={`img-preview ${active ? 'active' :''}`} >\n              <img className=\"playerProfilePic_home_tile\" alt=\"wish\" src={picture && picture}></img>\n              <div className=\"delete\" onClick={handleDeleteImg}>{'\\u2715'}</div>\n            </div>\n          </div>\n  \n          <input className=\"add-wish-input\" \n                type=\"text\" \n                value={title} \n                placeholder=\"I want...\" \n                required\n                onChange={e => setTitle(e.target.value)}\n                onKeyDown={handleEnter} \n          />\n\n          <input className=\"add-wish-price\" \n                type=\"number\" \n                step=\"0.01\"\n                min=\"0\"\n                value={price} \n                placeholder=\"Price...\" \n                onChange={e => setPrice(e.target.value)}\n                onKeyDown={handleEnter} \n          />\n\n          <input className=\"add-wish-price\" \n                type=\"text\" \n                value={link} \n                placeholder=\"Link...\" \n                onChange={e => setLink(e.target.value)}\n                onKeyDown={handleEnter} \n          />\n\n          \n          <input className=\"submit\" type=\"submit\" value=\"Done\"/>\n        </div>\n\n        {/* <input type=\"submit\" /> */}\n        {/* <input type=\"text\" title={title} placeholder=\"я хочю...\" onChange={setTitle}/> */}\n      </form>\n    </div>\n\n  );\n}\n\n","import React from 'react';\n\nexport default function ListItem({wish, onDelete, onSelect}) {\n  // const [toggleClass, setToggleClass] = useState(false);\n    \n  function handleClick(event){\n    event.stopPropagation();\n    onDelete(wish.id);\n  }\n\n  function handleClickLink(event){\n    event.stopPropagation();\n  }\n\n  const getClickableLink = link => {\n    return link.startsWith(\"http://\") || link.startsWith(\"https://\") ?\n      link\n      : `http://${link}`;\n  };\n\n  // function handleClickMenu(event) {\n  //   event.stopPropagation();\n  //   setToggleClass(true);\n  // }\n\n  // function useOutsideAlerter(ref) {\n  //   useEffect(() => {\n  //     function handleClickOutside(event) {\n  //       if (ref.current && !ref.current.contains(event.target)) {\n  //         setToggleClass(false);\n  //       }\n  //     }\n  //     document.addEventListener(\"mousedown\", handleClickOutside);\n  //     return () => {\n  //       document.removeEventListener(\"mousedown\", handleClickOutside);\n  //     };\n  //   }, [ref]);\n  // }\n\n  // const wrapperRef = useRef(null);\n  // useOutsideAlerter(wrapperRef);\n\n  return (\n    <div className=\"wish-item-wrap\">\n      <div className=\"wish-item\" onClick={() => onSelect(wish)}>\n        <div className=\"wish-img-wrap\">\n          {wish.imgUrl &&\n            <img className=\"wish-img\" src={wish.imgUrl} alt=\"wish\"/>\n          }\n          {wish.price &&\n            <div className=\"wish-price-wrap\">\n              <p className=\"wish-price\">{wish.price}$</p>\n            </div>\n          }\n        </div>\n        <p className=\"wish-name\">{wish.title}</p>\n        {wish.link &&\n          <div className=\"a-wrap\">\n            <a rel=\"noopener noreferrer\" href={getClickableLink(wish.link)} target=\"_blank\" onClick={handleClickLink} className=\"wish-link\">{wish.link}</a>\n          </div>\n        }\n        \n        <button className=\"delete\" onClick={handleClick}>{'\\u2715'}</button>\n        \n        {/* <div className=\"dropdown-wrap\">\n          <div className=\"dropdown\">\n            <div className=\"dropbtn\" onClick={handleClickMenu}>\n              <span className=\"dot\"></span>\n              <span className=\"dot\"></span>\n              <span className=\"dot\"></span>\n            </div>\n            <div className={`dropdown-content ${toggleClass ? 'active' :''}`}>\n              <a href=\"#home\">Home</a>\n              <a href=\"#about\">About</a>\n              <a href=\"#contact\">Contact</a>\n            </div>\n          </div>\n        </div> */}\n      </div>\n    </div>\n      \n        \n  );\n}\n\n\n","import React, { useState } from 'react';\n\nexport default function ListItemEdit({wish, onUpdate}) {\n  // const [title, setTitle] = useState(wish && wish.title);\n  const [title, setTitle] = useState( wish.title);\n  const [price, setPrice] = useState( wish.price);\n  const [link, setLink] = useState( wish.link);\n  // const db = useContext(DBContext);\n  console.log(title);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    onUpdate(wish.id, title, price, link);\n\n    console.log(wish.id, title);\n\n    // setTitle(wish && wish.title);\n  }\n\n\n    return (\n      <div className=\"edit-wish-item\">\n        {/* <div>{wish.title}</div> */}\n        <form onSubmit={handleSubmit} className=\"edit-wish-form\">\n          {/* <input defaultValue={wish && wish.title} value={title}></input> */}\n          {wish.imgUrl &&\n            <div className={\"img-preview\"} >\n              <img className=\"wish-img\" src={wish.imgUrl} alt=\"wish\"/>\n              {/* <div className=\"delete\" \n                  // onClick={handleDeleteImg}\n                  >{'\\u2715'}\n              </div> */}\n            </div>\n          }\n\n          {/* {!wish.imgUrl &&\n            <div className=\"img-add-wrap\">\n              <input type=\"file\" \n                    accept=\"image/x-png,image/gif,image/jpeg\"\n                    onChange={onFileChange}\n                    value={imgUrlPlace}\n                    id=\"imageInput\"/>\n              <label htmlFor=\"imageInput\" \n                    className={`img-button ${active ? 'active' :''}`}\n                    >Choose image</label>\n            </div>\n          } */}\n\n          {!wish.imgUrl &&\n            <div className=\"img-add-wrap\">\n\n            </div>\n          }\n\n\n          <input className=\"edit-wish-input edit-name\" \n                 required\n                 value={title} \n                 onChange={e => setTitle(e.target.value)}\n                //  ref={input => input && input.focus()}\n          />\n\n          <input className=\"edit-wish-input edit-price\" \n                 value={price} \n                 placeholder=\"price...\"\n                 onChange={e => setPrice(e.target.value)}\n                //  ref={input => input && input.focus()}\n          />\n\n          <input className=\"edit-wish-input edit-link\" \n                 value={link} \n                 placeholder=\"link...\"\n                 onChange={e => setLink(e.target.value)}\n                //  ref={input => input && input.focus()}\n          />\n\n          <input className=\"submit\" type=\"submit\" name=\"\"  value=\"Done\" id=\"\"/>\n        </form>\n        {/* <input value={wish && wish.title}></input> */}\n      </div>\n       \n          \n    );\n  }\n  \n  ","import React, { useContext, useEffect, useState } from 'react';\nimport DBContext from '../../context/db';\nimport WishCreate from '../WishCreate';\nimport ListItem from '../ListItem';\nimport ListItemEdit from '../ListItemEdit';\nimport { db, auth } from '../../firebase';\n\nexport default function Itemslist({match}) {\n    const [selectedWish, setSelectedWish] = useState(null);\n    const [wishes , setWishes] = useState([]);\n\n    const db2 = useContext(DBContext);\n\n    function getWishesSubscribe() {\n      return db.collection('wishes')\n        .where('owner', '==', auth().currentUser.uid)\n        .onSnapshot(snapshot => {\n          const items = snapshot.docs.map(doc => ({\n              id: doc.id,\n              ...doc.data()\n          }));\n          setWishes(items);\n        });\n    }\n\n    function getCategoryWishesSubscribe(listId) {\n      return db.collection('wishes')\n          .where('categoryId', 'array-contains', listId)\n          .where('owner', '==', auth().currentUser.uid)\n          .onSnapshot(snapshot => {\n            const items = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            setWishes(items);\n          });        \n    }\n\n    \n    useEffect(() => {\n      if (match.params.categoryId === 'all' || match.params.categoryId === undefined) {\n        // db2.getWishes()\n        // .then(setWishes);\n        getWishesSubscribe();\n      } else if (match.params.categoryId) {\n        // db2.getCategoryWishes(match.params.categoryId)\n        //   .then(setWishes);\n        getCategoryWishesSubscribe(match.params.categoryId);\n\n      } \n    // }, [db2, match.params.categoryId]);\n    }, [match.params.categoryId]);\n\n    function handleSubmit(title, price, link, imgUrl) {\n      if (match.params.categoryId === 'all' || match.params.categoryId === undefined) {\n        db2.createWish({\n          title, price, link, imgUrl\n        }).then(wish => {\n          setWishes([...wishes, wish]);\n        });\n      } else if (match.params.categoryId) {\n        db2.createWish({\n          title, price, link, imgUrl,\n          categoryId: [category.id]\n        }).then(wish => {\n          setWishes([...wishes, wish]);\n        });\n      }\n    }\n\n    function handleDelete(wishId) {\n      db2.deleteWish(wishId).then(wishId => {\n        setWishes([...wishes.filter(w => w.id !== wishId)])\n      });\n    }\n\n    function handleSelect(wish) {\n      setSelectedWish(wish);\n    }\n\n    function handleUpdate(wishId, title, price, link) {\n      // console.log(wishId, data);\n      // db2.updateWish(wishId, title, price, link);\n      db2.updateWishName(wishId, title);\n      db2.updateWishPrice(wishId, price);\n      db2.updateWishLink(wishId, link);\n      setSelectedWish(null);\n\n    }\n \n\n\n    // function setCategoryTitle(){\n    //   const category = db2.categories.find(category => category.id === match.params.categoryId);\n    //   if (!category || category === 'all')\n    //     return 'All';\n    //   return category.title;\n      \n    // }\n\n    const category = db2.categories.find(category => category.id === match.params.categoryId);\n\n    return (\n      <div className=\"items-list\">\n        {/* <h1>{category.title}</h1> */}\n        <WishCreate onSubmit={handleSubmit}></WishCreate>\n        <div className=\"items-list-wrap\">\n           {wishes.map(wish =>\n            <ListItem \n              key={wish.id}\n              wish={wish}\n              // wishId={wish.id} \n              // wishTitle={wish.title}\n              onDelete={handleDelete}\n              onSelect={handleSelect}\n            />\n\n           )}\n         </div> \n         {selectedWish &&\n          <div className={(selectedWish && 'active list-item-edit-wrap') || 'list-item-edit-wrap'}>\n            <div className=\"list-item-background\" onClick={() => setSelectedWish(null)}>\n            \n            </div>\n            <ListItemEdit\n              onUpdate={handleUpdate}\n              wish={selectedWish}  \n            />\n          </div>\n          }\n\n          {/* {selectedWish &&\n            <div className=\"list-item-edit-wrap\" >\n              <div className=\"list-item-background\" onClick={() => setSelectedWish(null)}></div>\n              <ListItemEdit\n                wish={selectedWish}  \n              />\n            </div>\n         }  */}\n      </div>\n       \n          \n    );\n  }\n  \n  ","import React from 'react';\n\nexport default function Content({ ...props }) {\n  return (\n      <main id=\"app-content\" {...props} />\n  );\n}","import React, {useContext} from 'react';\nimport DBContext from '../../context/db';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Login() {\n    const db = useContext(DBContext);\n    const history = useHistory();\n    \n    function handleClick(){\n        db.signInWithGoogle();\n        history.push(\"/\");\n    }\n  \n    return (\n      <div className=\"login-wrap\">\n        <div onClick={handleClick} className=\"google-btn\">\n          <div className=\"google-icon-wrapper\">\n            <img className=\"google-icon\" alt=\"Google logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"/>\n          </div>\n          <p className=\"btn-text\"><b>Sign in with Google</b></p>\n        </div>\n      </div>\n    );\n  }\n  \n  ","import React, { useState,  useEffect } from 'react';\nimport * as api from './api';\n\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './Components/Header';\nimport Sidebar from './Components/Sidebar';\nimport Itemslist from './Components/Itemslist';\nimport Content from './Components/Content';\nimport Login from './Components/Login';\nimport { auth } from './firebase';\n\nimport DBContext from './context/db';\n\n\nexport default function App() {\n  const [categories, setCategories] = useState([]);\n  const [isAuth, setAuth] = useState();\n\n  \n\n  useEffect(() => {\n    api.getCategories().then(setCategories);\n    \n    auth().onAuthStateChanged(function(user) {\n      if (user) {\n        setAuth('signed');\n      } else {\n        setAuth('no');\n      }\n    });\n    \n  }, []);\n\n\n  if (isAuth === 'signed') {\n    return (\n      <DBContext.Provider value={{categories, ...api}}>\n        <div className=\"app\">\n          <Header/>\n          <div className=\"main\">\n            <Sidebar categories={categories}/>\n            <Content>\n              <Switch>\n                <Route exact path=\"/\" component={Itemslist} />\n                <Route path=\"/:categoryId?\" component={Itemslist} />\n            </Switch>\n            </Content>\n          </div>\n        </div>\n      </DBContext.Provider>\n    );\n  }\n\n  if (isAuth === 'no') {\n    return (\n      <DBContext.Provider value={{...api}}>\n        <Route component={Login}/>\n      </DBContext.Provider>\n    );\n  }\n\n  return (\n    <div className=\"spinner-wrap\">\n      <div className=\"loadingio-spinner-rolling-pmiwm2ufmu\">\n        <div className=\"ldio-x68g8gm35i\">\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport './sass/main.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}